<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--************************** 开发环境 ****************************-->
    <!-- 日志根路径(绝对路径) -->
    <!--    <property name="log.basePath" value="/Users/wangfugui/Downloads/appname"/>-->
    <!-- 日志根路径(相对路径)，如果使用外部 tomcat，则日志会在bin目录，需要加../ -->
    <property name="log.basePath" value="logs"/>
    <!-- 日志存放路径 -->
    <property name="log.path" value="/"/>
    <!-- 不同的appender，统一日志输出格式 -->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n"/>
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS} %yellow([%X{traceId}][%X{username}]) %highlight(%-5level) %magenta(%logger{30}:%-3L) - %m%n"/>

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- INFO日志输出 -->
    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.basePath}/${log.path}/info.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>
                ${log.basePath}${file.separator}%d{yyyy-MM-dd}${file.separator}%d{yyyy-MM-dd}-info.%i.log.zip
            </fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- ERROR日志输出 -->
    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.basePath}/${log.path}/error.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>
                ${log.basePath}${file.separator}%d{yyyy-MM-dd}${file.separator}%d{yyyy-MM-dd}-error.%i.log.zip
            </fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 用户访问日志输出  -->
    <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.basePath}/${log.path}/user.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>
                ${log.basePath}${file.separator}%d{yyyy-MM-dd}${file.separator}%d{yyyy-MM-dd}-user.%i.log.zip
            </fileNamePattern>
            <!-- 日志最大的历史 60天 -->
            <maxHistory>60</maxHistory>
            <maxFileSize>20MB</maxFileSize>
        </rollingPolicy>
        <encoder>
            <pattern>${log.pattern}</pattern>
        </encoder>
    </appender>

    <!-- 自定义appender ：日志级别控制 -->
    <logger name="sys-user" level="info">
        <appender-ref ref="sys-user"/>
    </logger>

    <!-- 当前系统全局 ：日志级别控制  -->
    <logger name="com.aoizz" level="info"/>

    <!-- 第三方系统：Spring日志级别控制  -->
    <logger name="org.springframework" level="warn"/>
    <!-- 第三方系统：关闭kafka日志 -->
    <!--<logger name="org.apache.kafka" level="off"/>-->

    <!-- 单独指定控制台打印级别 -->
    <root level="info">
        <appender-ref ref="console"/>
    </root>

    <!-- 指定上面appender的日志打印级别 -->
    <root level="info">
        <appender-ref ref="file_info"/>
        <appender-ref ref="file_error"/>
    </root>

    <!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
    <!-- mybatis日志打印 -->
    <logger name="com.ibatis" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG"/>
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"/>
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>
    <logger name="org.mybatis" level="DEBUG"/>
    <logger name="org.springframework" level="WARN"/>
    <logger name="org.apache" level="WARN"/>
    <logger name="com.aoizz.communitymarket" level="DEBUG"/>
    <!--如果需要打印SQL,可以把下面的级别设置为DEBUG -->
    <logger name="com.aoizz.communitymarket.mapper" level="DEBUG"/>
    <logger name="com.aoizz.communitymarket.service" level="DEBUG"/>
</configuration>